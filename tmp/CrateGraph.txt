CrateGraph { arena: {CrateId(0): CrateData { root_file_id: FileId(0), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("alloc"), canonical_name: "alloc"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }
            ], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Alloc), is_proc_macro: false
        }, CrateId(1): CrateData { root_file_id: FileId(1), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("backtrace"), canonical_name: "backtrace"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(2): CrateData { root_file_id: FileId(2), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("core"), canonical_name: "core"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Core), is_proc_macro: false
        }, CrateId(3): CrateData { root_file_id: FileId(3), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("panic_abort"), canonical_name: "panic_abort"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(4): CrateData { root_file_id: FileId(4), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("panic_unwind"), canonical_name: "panic_unwind"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(5): CrateData { root_file_id: FileId(5), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("proc_macro"), canonical_name: "proc_macro"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }
            ], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(6): CrateData { root_file_id: FileId(6), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("profiler_builtins"), canonical_name: "profiler_builtins"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(7): CrateData { root_file_id: FileId(7), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("std"), canonical_name: "std"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(4), name: CrateName("panic_unwind"), prelude: true
                }, Dependency { crate_id: CrateId(3), name: CrateName("panic_abort"), prelude: true
                }, Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(6), name: CrateName("profiler_builtins"), prelude: true
                }, Dependency { crate_id: CrateId(10), name: CrateName("unwind"), prelude: true
                }, Dependency { crate_id: CrateId(8), name: CrateName("std_detect"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: true
                }
            ], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Std), is_proc_macro: false
        }, CrateId(8): CrateData { root_file_id: FileId(8), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("std_detect"), canonical_name: "std_detect"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(9): CrateData { root_file_id: FileId(9), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("test"), canonical_name: "test"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Test), is_proc_macro: false
        }, CrateId(10): CrateData { root_file_id: FileId(10), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("unwind"), canonical_name: "unwind"
            }), cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [], proc_macro: Err("no proc macro loaded for sysroot crate"), origin: Lang(Other), is_proc_macro: false
        }, CrateId(11): CrateData { root_file_id: FileId(11), edition: Edition2015, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("libc"), canonical_name: "libc"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "feature=default",
                "feature=std",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "feature=default",
                "feature=std",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {
                    "OUT_DIR": "/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-fastbuild/bin/external/crate_index__libc-0.2.139/libc_build_script.out_dir"
                }
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("libc")
            }, is_proc_macro: false
        }, CrateId(12): CrateData { root_file_id: FileId(12), edition: Edition2015, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("num_cpus"), canonical_name: "num_cpus"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(11), name: CrateName("libc"), prelude: true
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("num_cpus")
            }, is_proc_macro: false
        }, CrateId(13): CrateData { root_file_id: FileId(13), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("pin_project_lite"), canonical_name: "pin_project_lite"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("pin_project_lite")
            }, is_proc_macro: false
        }, CrateId(14): CrateData { root_file_id: FileId(14), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("unicode_ident"), canonical_name: "unicode_ident"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("unicode_ident")
            }, is_proc_macro: false
        }, CrateId(15): CrateData { root_file_id: FileId(15), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("proc_macro2"), canonical_name: "proc_macro2"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "feature=default",
                "feature=proc-macro",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "feature=default",
                "feature=proc-macro",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {
                    "OUT_DIR": "/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__proc-macro2-1.0.51/proc-macro2_build_script.out_dir"
                }
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(14), name: CrateName("unicode_ident"), prelude: true
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("proc_macro2")
            }, is_proc_macro: false
        }, CrateId(16): CrateData { root_file_id: FileId(16), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("quote"), canonical_name: "quote"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "feature=default",
                "feature=proc-macro",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "feature=default",
                "feature=proc-macro",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {
                    "OUT_DIR": "/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__quote-1.0.23/quote_build_script.out_dir"
                }
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(15), name: CrateName("proc_macro2"), prelude: true
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("quote")
            }, is_proc_macro: false
        }, CrateId(17): CrateData { root_file_id: FileId(17), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("syn"), canonical_name: "syn"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "feature=clone-impls",
                "feature=default",
                "feature=derive",
                "feature=full",
                "feature=parsing",
                "feature=printing",
                "feature=proc-macro",
                "feature=quote",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "feature=clone-impls",
                "feature=default",
                "feature=derive",
                "feature=full",
                "feature=parsing",
                "feature=printing",
                "feature=proc-macro",
                "feature=quote",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {
                    "OUT_DIR": "/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__syn-1.0.109/syn_build_script.out_dir"
                }
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(15), name: CrateName("proc_macro2"), prelude: true
                }, Dependency { crate_id: CrateId(16), name: CrateName("quote"), prelude: true
                }, Dependency { crate_id: CrateId(14), name: CrateName("unicode_ident"), prelude: true
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("syn")
            }, is_proc_macro: false
        }, CrateId(18): CrateData { root_file_id: FileId(18), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("tokio_macros"), canonical_name: "tokio_macros"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(5), name: CrateName("proc_macro"), prelude: true
                }, Dependency { crate_id: CrateId(15), name: CrateName("proc_macro2"), prelude: true
                }, Dependency { crate_id: CrateId(16), name: CrateName("quote"), prelude: true
                }, Dependency { crate_id: CrateId(17), name: CrateName("syn"), prelude: true
                }
            ], proc_macro: Ok([ProcMacro { name: "main", kind: Attr, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "main", kind: Attr
                    })
                }, ProcMacro { name: "main_rt", kind: Attr, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "main_rt", kind: Attr
                    })
                }, ProcMacro { name: "test", kind: Attr, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "test", kind: Attr
                    })
                }, ProcMacro { name: "test_rt", kind: Attr, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "test_rt", kind: Attr
                    })
                }, ProcMacro { name: "main_fail", kind: Attr, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "main_fail", kind: Attr
                    })
                }, ProcMacro { name: "test_fail", kind: Attr, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "test_fail", kind: Attr
                    })
                }, ProcMacro { name: "select_priv_declare_output_enum", kind: FuncLike, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "select_priv_declare_output_enum", kind: FuncLike
                    })
                }, ProcMacro { name: "select_priv_clean_pattern", kind: FuncLike, expander: Expander(ProcMacro { process: Mutex { data: ProcMacroProcessSrv { _process: Process { child: JodChild(Child { stdin: None, stdout: None, stderr: None, ..
                                    })
                                }, stdin: ChildStdin { ..
                                }, stdout: BufReader { reader: ChildStdout { ..
                                    }, buffer: 0/8192
                                }, version: 0
                            }, poisoned: false, ..
                        }, dylib_path: AbsPathBuf("/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-opt-exec-2B5CBBC6/bin/external/crate_index__tokio-macros-1.8.2/libtokio_macros-2565194975.dylib"), name: "select_priv_clean_pattern", kind: FuncLike
                    })
                }
            ]), origin: CratesIo { repo: None, name: Some("tokio_macros")
            }, is_proc_macro: true
        }, CrateId(19): CrateData { root_file_id: FileId(19), edition: Edition2018, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("tokio"), canonical_name: "tokio"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "feature=macros",
                "feature=num_cpus",
                "feature=rt",
                "feature=rt-multi-thread",
                "feature=tokio-macros",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "feature=macros",
                "feature=num_cpus",
                "feature=rt",
                "feature=rt-multi-thread",
                "feature=tokio-macros",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {
                    "OUT_DIR": "/private/var/tmp/_bazel_fb/6eced65e9af35df66fe54d4e4c82cece/execroot/rust-bazel/bazel-out/darwin_arm64-fastbuild/bin/external/crate_index__tokio-1.25.0/tokio_build_script.out_dir"
                }
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(12), name: CrateName("num_cpus"), prelude: true
                }, Dependency { crate_id: CrateId(13), name: CrateName("pin_project_lite"), prelude: true
                }, Dependency { crate_id: CrateId(18), name: CrateName("tokio_macros"), prelude: true
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("tokio")
            }, is_proc_macro: false
        }, CrateId(20): CrateData { root_file_id: FileId(20), edition: Edition2021, version: None, display_name: Some(CrateDisplayName { crate_name: CrateName("example"), canonical_name: "example"
            }), cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), potential_cfg_options: CfgOptions([
                "debug_assertions",
                "panic=unwind",
                "target_arch=aarch64",
                "target_endian=little",
                "target_env=",
                "target_family=unix",
                "target_feature=aes",
                "target_feature=crc",
                "target_feature=dit",
                "target_feature=dotprod",
                "target_feature=dpb",
                "target_feature=dpb2",
                "target_feature=fcma",
                "target_feature=fhm",
                "target_feature=flagm",
                "target_feature=fp16",
                "target_feature=frintts",
                "target_feature=jsconv",
                "target_feature=lor",
                "target_feature=lse",
                "target_feature=neon",
                "target_feature=paca",
                "target_feature=pacg",
                "target_feature=pan",
                "target_feature=pmuv3",
                "target_feature=ras",
                "target_feature=rcpc",
                "target_feature=rcpc2",
                "target_feature=rdm",
                "target_feature=sb",
                "target_feature=sha2",
                "target_feature=sha3",
                "target_feature=ssbs",
                "target_feature=vh",
                "target_has_atomic=128",
                "target_has_atomic=16",
                "target_has_atomic=32",
                "target_has_atomic=64",
                "target_has_atomic=8",
                "target_has_atomic=cas",
                "target_has_atomic=ptr",
                "target_has_atomic_load_store=16",
                "target_has_atomic_load_store=32",
                "target_has_atomic_load_store=64",
                "target_has_atomic_load_store=8",
                "target_has_atomic_load_store=cas",
                "target_has_atomic_load_store=ptr",
                "target_os=macos",
                "target_pointer_width=64",
                "target_thread_local",
                "target_vendor=apple",
                "test",
                "unix"
            ]), target_layout: Err("rust-project.json projects have no target layout set"), env: Env { entries: {}
            }, dependencies: [Dependency { crate_id: CrateId(2), name: CrateName("core"), prelude: true
                }, Dependency { crate_id: CrateId(0), name: CrateName("alloc"), prelude: true
                }, Dependency { crate_id: CrateId(7), name: CrateName("std"), prelude: true
                }, Dependency { crate_id: CrateId(9), name: CrateName("test"), prelude: false
                }, Dependency { crate_id: CrateId(19), name: CrateName("tokio"), prelude: true
                }, Dependency { crate_id: CrateId(18), name: CrateName("tokio_macros"), prelude: true
                }
            ], proc_macro: Err("no proc macro dylib present"), origin: CratesIo { repo: None, name: Some("example")
            }, is_proc_macro: false
        }
    }
}
